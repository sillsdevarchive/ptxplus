====== TeX ======

So much [[TeX]] and so little time...

===== Notes on hyphenation =====
<Cover how [[TeX]] hyphenation is handled in ptxplus>

==== \lccode ====
When using some Unicode fonts it is sometimes necessary to set the \lccode for those characters which would be normally set to '0'. (See the TeX book pg. 41 & 345 for more details.)

For just a few characters you can enter them in the project.conf file. Do is something like this:

	\lccode"1000="1000 \lccode"1001="1001

Only use spaces between the entries. However, if you have a large range to cover you will want to put the entire list in a file in your Hyphenation directory called "lccodelist.txt". The make_tex_hyphenation.py process will find it and insert them into your project hyphenation next time it builds it. The codes should be entered into that file like this:

\lccode"1000="1000
\lccode"1001="1001
...

When using the external file to hold your \lccodes it is important not to have any entered in the project.conf file. Leave the field blank if you plan on using an external list. When using an external file the hyphenation script will ignore any values in the project.conf file.

If you have a whole bunch of characters to cover you may want to automate the process with this nifty line of Perl code by Martin Hosken:

perl -e 'for (0x1000..0x109F) { printf "\\lccode \"%X = \"%X\n", $_, $_}' >lccodelist.txt

Adjust for your situation.

The above code will generate a blind list of \lccodes but you may want something more precise. Though not tested, this Perl code, also by Martin should give you an exact list of \ccodes for your project:

perl -CSD -ne 'foreach(split("")){$c{$_}++}; END {print join("\n", map {sprintf("\\lcode \"%04X = \"%04X", ord($_), ord($_))} sort keys %c)}' wordlist.txt > lccodelist.txt

Again, adjust for your project.

==== Font Substitution ====
Some times you may need to substitute a font on a specific text marker. For example, a text using a non-Roman script but needs to have a book title in another language which needs characters that are not included in the publication font. Here's what you do:

1) In the place where fonts are defined, add a line like this:
	\font\chapterfont = "[../Fonts/GenBkBas/GenBkBasBI.ttf]" at 14pt

2) In the style file add a hook to the marker you want to use the special font on like this:
	\sethook{start}{mt2}{\chapterfont}

That should do it. This is a work around so you will need to make adjustment to the fonts file and the style file. (Until we come up with some cleaver programing to make this more automated.)

==== Misc... ====
These are just some miscalanious notes and we don't have a better place to keep them.

=== Override code for .tex files ===
The [[.tex]] files that ptxplus produces is automated but near the end of a project it may be necessary to tweak them by added code. This shouldn't be done until the text is locked down. An example would be setting overrides for page behavior in peripheral matter like these lines:

\BodyColumns=1
\def\RHtitleleft{\empty}
\def\RHtitlecenter{\empty}
\def\RHtitleright{\empty}
\def\RHoddcenter{\empty}
\def\RHevencenter{\empty}

These would be inserted manually to keep the page number from appearing and making it a single column page.
