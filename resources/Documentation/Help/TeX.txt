Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.26
Creation-Date: Unknown
Modification-Date: Tue, 08 Sep 2009 16:53:48 +0700

====== TeX ======

So much [[TeX]] and so little time...

===== Paging Tips and Tricks =====
Here are some tips on how to get column balance and other paging operations:

==== Inserting blank lines on first page ====
Some times, when the introduction is short, there is room for body text on the first page. However, a section heading found shortly after the first few verses can throw things off and leave you with several blank lines on the left column. One way around this is to insert a blank line in the introduction section before the horizontal divider line (if one is used). You do this by inserting something like a \ip followed by a normal space (to be legal SFM) then a character like a zero width space (U+200B). You can insert several of them if needed to push the text down and balance the right column with the left.


===== Notes on hyphenation =====
Hyphenation is an important issue in any publication. Here are some notes on various hyphenation problems that can be encountered.

==== Increasing the Hyphenation Exception Word List Size ====
It may be necessary to change the maximum number of words allowed in the hyphenation exceptions list. To do this the /etc/texmf/texmf.cnf file needs to be changed. However, the warning at the top of the file makes it clear that you don't want to edit that specific file because it is auto-generated. Instead, you want to edit this file:

sudo gedit /etc/texmf/texmf.d/95NonPath.cnf

Near the bottom you will find hyph_size = 8191. That's a lot but if you need more you can increase it. However it must be a prime number. To find out if the number you want to use is prime or not go to: http://primes.utm.edu/lists/small/10000.txt

You will want to choose a number that is greater than the number of words in your list. For example, your list is 10,033 words long so you will want to choose a the prime number of 10193 which is a prime number over 10,033.

Once you have changed the setting you will need to save your file and close the editor so the terminal is free to move on to the next step.

The next step is to remake the main texmf.cnf. To do this, run this command:

sudo update-texmf

Then just to be safe you should probably run this too to update the fmt files (I think, either way, it doesn't seem to hurt):

fmtutil --refresh

Your new settings should be recognized by the system.

Now, after saying all that, it might not work. If that is the case then you can try just editing /etc/texmf/texmf.cnf directly despite warnings not to. If you are running a single user, single install system, you'll probably be okay, but you have been warned. The way to do this is edit this file with

sudo gedit /etc/texmf/texmf.cnf

Change the hyph_size setting to whatever you need it to be. Then run:

fmtutil --refresh

and you should be good to go.


==== \lccode ====
When using some Unicode fonts it is sometimes necessary to set the \lccode for those characters which would be normally set to '0'. (See the TeX book pg. 41 & 345 for more details.)

Sometimes you have a large rangeof codes to cover so for this reason we put the list in a file in your Hyphenation directory called "lccodelist.txt". The make_tex_hyphenation.py process will find it and insert them into your project hyphenation next time it builds it. The codes should be entered into that file like this:

\lccode"1000="1000
\lccode"1001="1001
...

If you have a whole bunch of characters to cover you may want to automate the process with this nifty line of Perl code by Martin Hosken:

perl -e 'for (0x1000..0x109F) { printf "\\lccode \"%X = \"%X\n", $_, $_}' >lccodelist.txt

Adjust for your situation.

The above code will generate a blind list of \lccodes but you may want something more precise. Though not tested, this Perl code, also by Martin should give you an exact list of \ccodes for your project:

perl -CSD -ne 'foreach(split("")){$c{$_}++}; END {print join("\n", map {sprintf("\\lcode \"%04X = \"%04X", ord($_), ord($_))} sort keys %c)}' wordlist.txt > lccodelist.txt

Again, adjust for your project.


==== Font Substitution ====
Some times you may need to substitute a font on a specific text marker. For example, a text using a non-Roman script but needs to have a book title in another language which needs characters that are not included in the publication font. Here's what you do:

1) In the place where fonts are defined, add a line like this:
	\font\chapterfont = "[../Fonts/GenBkBas/GenBkBasBI.ttf]" at 14pt

2) In the style file add a hook to the marker you want to use the special font on like this:
	\sethook{start}{mt2}{\chapterfont}

That should do it. This is a work around so you will need to make adjustment to the fonts file and the style file. (Until we come up with some cleaver programing to make this more automated.)


==== Watermark ====
You could use the "border" feature; this was intended for decorative borders but could just as well do a watermark.

Put whatever watermark you like into a PDF file by itself -- you'll want it fairly light gray, probably, if it's going to go behind all the text. Then just add something like

'''
\def\PageBorder{mywatermark.pdf}
'''

to the setup file, and the specified PDF file will be added behind each page. You can add options to resize it, etc:

'''
\def\PageBorder{mywatermark.pdf scaled 2000 rotated 45}
'''

(the "scaled" factor is relative to 1000, so this would be double the original image size).


==== Misc... ====
These are just some miscellaneous notes and we don't have a better place to keep them.

=== Page Number Override ===
Some times you need to override the page number at a given place in a publication. This is easy to do. Find the [[TeX]] file (look in the process folder for a file with a [[.tex]] extension) that drives the process and add this simple command to it:

\pageno = nn

This will cause [[TeX]] to start the first page of that section with nn.

=== Override code for .tex files ===
The [[.tex]] files that ptxplus produces is automated but near the end of a project it may be necessary to tweak them by added code. This shouldn't be done until the text is locked down. An example would be setting overrides for page behavior in peripheral matter like these lines:

\BodyColumns=1
\def\RHtitleleft{\empty}
\def\RHtitlecenter{\empty}
\def\RHtitleright{\empty}
\def\RHoddcenter{\empty}
\def\RHevencenter{\empty}

These would be inserted manually to keep the page number from appearing and making it a single column page.
