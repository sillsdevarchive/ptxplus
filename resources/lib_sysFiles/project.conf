# These are general project settings. There are several
# sub-sections under this heading.
[General]

# This is the version that the project was last run under.
# This helps with automatic updates on the project.conf file.
systemVersion				= 0

# What translation editor is being used to edit the source
# text of this project?
#  Choices: (ptx | be | te) - Default = ptx
projectEditor				= 'ptx'

# Any special features that the text might have need to be
# listed here where processing scripts can find them.
[[TextFeatures]]

# Does the source text use dumb quotes? Set this to true
# if it does.
#  Choices: (true | false) - Default = false
dumbQuotes					= 'false'

# Are word contractions used in the text? (Mainly for English)
#  Choices: (true | false) - Default = false
contractionMarkers			= 'false'

# Possessive marker use. This is just for error checking as it is
# difficult to check for possessive markers that fall on the end of
# a word as authors will tend to use the same character as
# contractions and close single quotes. If they are being used it
# is good to note it here. (This is mainly found in English text.)
#  Choices: (true | false) - Default = false
possessiveMarkers			= 'false'

# When is necessary to work with source text that is not Unicode
# this setting will provide a way to describe the mapping(s) to
# get it converted to Unicode with TECKit. This is an example of
# the syntax to use for a simple mapping: 'path/map.tec' For more
# complex conversions you could use something like this:
# 'path/map1.tec:path/map2.tec' - Default = ''
targetEncodingPath			= ''


# This is a catch-all section for holding various
# pieces of project information.
[[ProjectInformation]]

# Project Name - The full name of the project.
projectName					= 'New Nameless Project'

# Project Description - A short one paragraph description of the project.
projectDescription			= 'Describe this project anyway you want.'

# ISO 639-3 language code - This can be helpful for
# clasification and organization of projects. (optional)
languageCode				= ''

# ISO 15924 script code - This can be helpful for
# clasification and organization of projects.(optional)
scriptCode					= ''

# Project Code - This can be helpful for organization
# of projects within a multiple language and script
# context. (optional)
projectCode					= ''

# Project ID - This could be a combination of the
# language, script and project codes. Or, it could be
# something completly unrelated. However, it is best to
# keep it to 12 characters or less if you can.
projectID					= 'KYU-MYMR-NTBAP'

# Source Copyright Holder - The name of the entity
# who holds the copyright on the source text.
sourceCopyright				= ''

# Expression Copyright Holder - The name of the
# entity who holds the copyright on this specific
# publication (expression of the source text).
expressionCopyright			= ''

# Copyright Year - The year the publication is
# copyrighted for.
copyrightYear				= ''


# Settings for Logging operations
[[Logging]]

# Project log reporting mode
#  Choices: (normal | debug) - Default = normal
logModeProject				= 'normal'

# Process error threshold. How may errors that can be
# logged before the processes are halted. The default
# is 1. If you set it to 0 then you can have an infinite
# number of errors. This might be useful at the begining
# of a project. This is an integer setting, do not use
# quotes around the number.
errorLimit					= 1

# Add extra parameters to the makefile call. This is
# useful for debugging.
makeFileParams				= ''


# Settings for the system backup routine. When you choose to
# backup it will make a backup.tar.gz file in the Backup folder.
[[Backup]]

# The lastBackup setting is automatic, do not bother changing it.
lastBackup					= 0

# The path to where you want the backup files. The default is to
# have the Backup folder right in the project but it can go anywhere.
backupPath					= 'Backup'


# Settings for the project archive.
[[Archive]]

# Whole folders that will be exclude from the archive.
excludeArchiveDirs			= 'Backup Log Process Source .svn .bzr .hg .git'

# Specific files that will be excluded from the archive.
excludeArchiveFiles			= 'Makefile project.conf'

# Types of files that will be excluded.
excludeArchiveFileTypes		= '.tar.gz .zip .log .tex .delayed .parlocs'

# Specific exceptions to the type exclusions. Just in case
# there is a certain file you need but that specific type
# has been excluded.
includeArchiveFiles			= 'hyphenation.tex'

# The default location were archives are kept if the
# process is run "blind". The default is ../Archive
archivePath					= '../Archive'


# A list of processes (PY scripts) that will be preformed on
# the source text before it is processed by the rendering engine.
# Change the value to "false" on any modules you don't want to be
# active. (See Help->Scripture->Preprocess Checking)
[[PreprocessChecks]]

# Check book is a meta-checking script which looks for errors
# in punctuation and basic markup. These are all checks that
# need to be done so for easy reporting they have been combined
# in one script.
#  Choices: (true | false) - Default = true
check_book					= 'true'

# Check footnotes for well-formed-ness
#  Choices: (true | false) - Default = true
check_footnotes				= 'true'

# Check crossreferences for well-formed-ness
#  Choices: (true | false) - Default = true
check_crossreferences		= 'true'

# Generate a word list for the current project. This will create
# a list of words from an SFM file and output a report to the
# Reports folder.
#  Choices: (true | false ) - Default = true
make_book_wordlist = true


# Copy the source text to the system. (See Help->Scripture->Copy Into System
# for more details.)
[[CopyIntoSystem]]

# Turn the copy command on or off.
#  Choices: (true | false) - Default = true
copy_from_source			= 'true'

# Copy source command line. You can modify this to run other
# commands while copying into the system. This is good for
# encoding conversions. Note: be sure to use quotes around
# the [infile] and [outfile] place holders in case file names
# contain spaces.
#  Default: (cp "[infile]" "[outfile]")
copyCommand					= 'cp "[infile]" "[outfile]"'


# These are optional processes that can be run on the text once
# it has been checked and copied into the project. Change to
# "true" any processes you want to run.
[[TextProcesses]]

# Generate a paragraph adjustment file for a book. If the .adj file
# already exists it will not overwrite the existing one. It must be
# deleted first.
#  Choices: (true | false) - Default = true
make_para_adjust_file		= 'true'

# Generate an illustrations control file for pdf2ptx to use for
# illustrations inserting.
#  Choices: (true | false) - Default = false
make_piclist_file		= 'false'

# Replace 'straight' quotes for typesetters quotes. This will
# overwrite the existing book file.
#  Choices: (true | false) - Default = false
swap_quotes					= 'false'

# Merge/Change cross refs into footnotes. This is useful for
# having footnotes and cross refs in order rather than seperated.
# This will overwrite the existing file.
merge_cross_refs			= 'false'

# Automatic insert footnote references (\fr) into footnotes.
# Caution, this is not fully tested yet.
#  Choices: (true | false) - Default = false
insert_footnote_refs		= 'false'

# Automatic insert of crossreference references (\xr) into crossreference notes.
# Caution, this is not fully tested yet.
#  Choices: (true | false) - Default = false
insert_crossreference_refs	= 'false'

# Insert \cl + val before 1st \c. This is used to create
# a chapter label before each chapter number. You might
# use this when you have centered chapter numbers.
#  Choices: (true | false) - Default = false
insert_chapter_label		= 'false'

# Some times it is necessary to "massage" the notes so they
# format better. This will insert nobreak spaces between
# references and callers and perhaps other things if needed.
prep_notes					= 'false'

# Some languages have very short words that tend to fall
# at the end of sentences. If the sentence falls at the
# the end of a paragraph the word could end up on a line
# by itself. To prevent this, this process will indiscriminately
# insert a non-breaking space (U+00A0 NBSP) in front of every
# short word that falls at the end of a sentence.
nbsp_for_short_words		= 'false'

# To further fine tune the nbsp_for_short_words.py script
# you need to add a list of words which could fall at the
# end of a paragraph. Typically, this is a fairly short list.
# If you do not enter any words, nothing will be done.
nbspWordList				= ''

# Topical Index processing: This will apply final touches
# topical index data that will be typeset. These are things
# such as inserting NBSPs in refs and any other necessary
# text modifications.
process_topic_index			= 'true'

# Experimental format for footnotes and cross references.
# The idea is to remove extra-Biblical matter from the
# text and allow the reader to experience the text as it
# was intended by the writer.
#
# This script will extract all the footnotes and cross
# reference notes in a text and move them into an external
# file which will use end-note markup to denote each note.
# This peripheral matter can then be added to the publication.
make_into_end_notes			= 'false'

# Experimental format for testing text for readability. This
# script will remove all footnotes, cross references and also
# chapter and verse number markers. All that will remain is
# the text of the book. This will give the readers the
# oportunity to read the text without all the extra-Biblical
# stuff in the way.
keep_only_text				= 'false'

# These are special processes for data and material in this
# project. Often these are custom processes designed for a
# specific project only. Hopefully not too often though.
# The processes here are not stand-alone, rather they are
# called by other scripts and are meant to increase the
# functionality of the calling script. If necessary, you can
# add more custom processes to this section. The only pre-
# requisite is that the calling script understands whatever
# it needs to get here from the custom command.
[[CustomProcesses]]

# Custom Process A - Enter a command line that will drive this
# custom process which will be called by another script. For
# example: 'cp "[infile]" "[outfile]"'
#  Default = "" (nothing)
customProcessA				= ''

# Custom Process B - Enter a command line that will drive this
# custom process which will be called by another script. For
# example: 'cp "[infile]" "[outfile]"'
#  Default = "" (nothing)
customProcessB				= ''


# Processes that are run on maps are listed here. You can turn them off
# if needed.
[[MapProcesses]]

# Enable the map creation module to work.
#  Choices: (true | false) - Default = true
make_map_file				= 'true'

# Map color mode - Choose true if you are using a color
# mode or false if you are using gray-scale
#  Choices: (true | false) - Default = true
mapColorMode				= 'true'


# These are processes that are run independent of the general
# text processes. They will preform project matainence routines.
# You can block them from running by changing the value to "false".
[[GlobalProcesses]]

# Make sure the right fonts are installed
#  Choices: (true | false) - Default = true
check_for_fonts				= 'true'

# We remake the makefile before each run
#  Choices: (true | false) - Default = true
make_makefile				= 'true'

# Make a project .sty file (not implemented yet)
#  Choices: (true | false) - Default = false
make_sty_file				= 'false'


# Resources used on this project
[[Resources]]

# Font resources
[[[Fonts]]]

# The font family to be used on this project
# If it is blank the system will use the default
# font which is GenBkBas
#  Default = none
projectFontFamily			= ''

# The path to your font library. You could use
# a path something like this:
#  ../_resources/lib_fonts
#  Default = none
pathToFontLibrary			= ''

# Illustration resources
[[[Illustrations]]]

# Name of the illustrations library to be used on this
# project. An example would be Knowles-600 which is
# the Horace Knowles Illustration Library at 600dpi.
#  Choices: (a lot) - Default = none
illustrationsLib			= ''

# The path to the illustrations library. You could
# use something like ../_resources/lib_illustrations
#  Default = none
pathToIllustrationsLib		= ''

# The piclist file definition (Hard coded for use in Python)
illustrationsControlFile	= 'illustrations.csv'


# All format specifications go in this section. They will be
# used by system processes to do a wide variety of tasks.
[Format]

# Page layout information.
[[PageLayout]]

# Page height (in mm please)
#  Default = 210mm
pageHeight			= '210mm'

# Page width (in mm please)
#  Default = 148mm
pageWidth			= '148mm'

# Page size ID code
#  Default = A5
pageSizeCode			= 'A5'

# Formating parameters for Scripture
[[Scripture]]

# Parameters that cover varous aspects of formating
# of chapter and verse layout
[[[ChapterVerse]]]

# ShortBookChapterOmit - If a book consists of a
# single chapter it is often desirable to not have
# a chapter number marking the beginning of the book.
# If set "true" this will insert a command in the
# control file to prevent ptx2pdf from inserting
# the chapter number.
#  Default = "true"
shortBookChapterOmit	= 'true'


# Font size defaults by major groupings
[[TextElements]]

# Titles - Level 1
[[[TitleLevelOne]]]
fontSize				= '24pt'
justification			= 'centered'

# Titles - Level 2
titleLevelTwo			= '18pt'

# Titles - Level 3
titleLevelThree			= '14pt'

# Body text
bodyText				= '11pt'

# Note text
noteText				= '9pt'


# These are settings that drive the processing of the project
# files. It is primarily for configuring the Makefile system.
[Process]

# General process settings
[[General]]

# These are settings that drive the Makefile processes when working with data
# from PTX. This is based on PTX default behavior, example: 60JASname.USFM
NAME_SOURCE_ORIGINAL		= ''

# The extention of the source files. Could be .PTX, .USFM or anything else.
NAME_SOURCE_EXTENSION		= 'USFM'

# When no further changes in the source text are needed set this to
# something other than '0'. This will prevent data loss on the files
# which need to be processed.
LOCKED						= 0

# The source language of the map translation table
MAP_LANG_CODE_SOURCE		= 'ENG'


# These are the paths that the Makefile system uses. Do not change these
# unless you really know what you are doing, or you are feeling really lucky.
[[Paths]]

# Path to the project home. This should always be the current working directory.
# This parameter is meant to be used only in Makefile and therefore we are using
# a shell call to pwd to return the current working directory.
PATH_HOME					= '$(shell pwd)'

# Path to the project Admin folder
PATH_ADMIN					= 'Admin'

# Path to the project Wiki which keeps notes and issues
PATH_ADMIN_WIKI				= 'Admin/Wiki'

# Where the end products are found from processes
PATH_DELIVERABLES			= 'Deliverables'

# Where the project fonts are found
PATH_FONTS					= 'Fonts'

# Path to the TeX hyphenation files
PATH_HYPHENATION			= 'Hyphenation'

# Path to the illustrations folder
PATH_ILLUSTRATIONS			= 'Illustrations'

# Path to the project process log files
PATH_LOG					= 'Log'

# The path to the map processing area
PATH_MAPS					= 'Maps'

# Path to the peripheral materials folder
PATH_PERIPH					= 'Peripheral'

# The path to the process folder
PATH_PROCESS				= 'Process'

# The path to the reports folder. This is where information that is
# distilled from the log files is kept.
PATH_REPORTS				= 'Reports'

# This is the path to point to the source text for this project. You can
# change this to point to the source or you can link your source into
# this directory. Either way, ptxplus will be looking here for the source
# text for this project.
PATH_SOURCE					= 'Source'

# The path to the project template directory if any templates are made.
PATH_TEMPLATES				= 'Templates'

# This is the path to where the project Scripture text is
# kept. It is copied here from the source folder after checks
# have been run and quality is assured.
PATH_TEXTS					= 'Texts'

# The path to the (global) maps source library
PATH_MAPS_SOURCE			= '$(PTXPLUS_BASE)/resources/lib_maps'

# The path to the project maps source files which may be stored in a
# central encoding. (used with multi-script projects)
PATH_MAPS_PROJECT			= 'Source'

# The path to the new wiki pages
PATH_WIKI_SOURCE = $(PTXPLUS_BASE)/resources/lib_sysFiles/Admin/Wiki

# Path to peripheral matter sources
PATH_PERIPH_SOURCE			= '$(PTXPLUS_BASE)/resources/lib_periph'

# This is where the system help can be found
PATH_SYSTEM_HELP			= '$(PTXPLUS_BASE)/resources/Documentation/Help'

# This is the project configuration file name, needed for project dependencies
PROJECT_CONF_FILE			= 'project.conf'

# This is a list of files that some of the project files should
# be dependent on. This is in the event that a change would be
# made to one of them and others would need to be remade. This
# needs a careful look-over.
DEPENDENT_FILE_LIST			= '$(TEX_SETUP) $(TEX_STYLE) $(TEX_HYPHENATION_FILE) $(PROJECT_CONF_FILE) $(PATH_PROCESS)/.stamp'


# These are TeX settings used by the system for processing
# project files.
[[TeX]]

# TeX inputs setting
TEX_INPUTS					= 'TEXINPUTS=$(PATH_HOME):$(PATH_HOME)/$(PATH_HYPHENATION):$(PTXPLUS_BASE)/bin/tex:.'

# TeX macro file name
TEX_PTX2PDF					= 'paratext2.tex'

# TeX macro settings file
TEX_SETUP					= 'ptx2pdf-setup.txt'

# TeX style settings file (this overrides the Paratext default format settings)
TEX_STYLE					= 'ptx2pdf.sty'

# TeX hyphenation file name
TEX_HYPHENATION_FILE		= '$(PATH_HYPHENATION)/hyphenation.tex'

# This is a special var will prevent problems on the blank
# page when two columns is turned on
blank_TEXSPECIAL			= '\BodyColumns=1'

# Final binding settings. These settings control the content of the Bible.
[[Binding]]

# Cover - Often the cover needs to be processed apart from other
# pieces of the project. This allows you to do this. Enter all
# the file names of your cover matter. The files need to be
# located in the Periperal folder. Seperate with a space and
# do not use spaces in the file names.
MATTER_COVER				= 'COVER_FRONT.USFM'

# Front matter - These are all the components we want included
# in the front matter section of the publication.  Enter all
# the file names of your front matter and include blank pages
# when necessary. The files need to be located in the Periperal
# folder. Seperate with a space and do not use spaces in the
# file names. they need to be listed in the order you want them
# to occure with a space between each one.
MATTER_FRONT				= 'BLANK.USFN TITLE.USFM'

# Old Testament - List the book IDs of the Old Testament you
# wish to include in your publication.
MATTER_BOOKS_OT				= ''

# New Testament - List the book IDs of the New Testament and
# other matter you wish to include in this portion of your
# publication. Any of these are acceptable:
#
# title_nt blank mat mrk luk jhn act rom 1co 2co gal eph php col 1th 2th 1ti 2ti tit phm heb jas 1pe 2pe 1jn 2jn 3jn jud rev
MATTER_BOOKS_NT				= ''

# Back matter - These are all the components we want included
# in the back matter section of the publication.  Enter all
# the file names of your front matter and include blank pages
# when necessary. The files need to be located in the Periperal
# folder. Seperate with a space and do not use spaces in the
# file names. they need to be listed in the order you want them
# to occure with a space between each one.
MATTER_BACK					= ''

# Maps are technically back matter but they are handled in a
# separate process. The maps we want to include are listed
# in order here with a space between each one. Recognized
# choices are m001 through m011. Please see Map Templates in
# the documentation for a description of each map.
MAP_IDS						= ''

# This file is the final goal. It is compiled from PDF files
# which are produced from combining all the individual components.
BIBLE_FINAL					= '$(PATH_DELIVERABLES)/BIBLE.PDF'


# The ptxplus manager system takes advantage of many standard
# programs that already come installed on your system. The
# HelperCommands section helps you to configure the use
# of these programs by ptxplus.
[[HelperCommands]]

# The utility for creating a PDF booklet. The default utility
# is pdfbklt. For more information on command-line options
# type pdfbklt --help. The default setting is:
#  pdfbklt -b A4 -p 2
MAKE_BOOKLET			= 'pdfbklt -b A4 -p 2'

# Program used for viewing PDF files. The default vier is
# Evince but if you wanted to use something like Adobe
# Acrobat you could use a command like this:
#  acroread -openInNewWindow
VIEWPDF					= 'evince'

# Command used to close the PDF viewer, if necessary.
# You could use a command like this:
#  kill `pgrep -s 0 -f acroread`
CLOSEPDF				= ''

# For looking at the book SFM files
EDITSFM					= 'gedit'

# Command used for closing the SFM files
CLOSESFM				= kill `pgrep -s 0 -f gedit`

# Program used for viewing SVG files. If you
# need to direct useless error messages out
# of the terminal you can direct them too
# this place "2>/dev/null"
VIEWSVG					= 'inkscape 2>/dev/null'

# Command used for closing the SVG viewer (optional)
CLOSESVG				= ''

# Program used for exporting SVG files
EXPORTSVG				= 'inkscape'

# Command for viewing wiki note file for this project
VIEWWIKI				= 'zim'

# Use this command for closing wiki note file (optional)
CLOSEWIKI				= 'kill `pgrep -s 0 -f zim`'

# Command to open a CSV file
EDITCSV					= 'ooffice -calc'

# Use this command for closing CSV files (optional)
CLOSECSV				= ''

# This command will call a routine to put a time stamp in a wiki file.
TEXT_TO_WIKI			= '$(PTXPLUS_BASE)/bin/python/lib_system/write_to_wiki.py'

# Python Scripture processing script
PY_PROCESS_SCRIPTURE_TEXT	= '$(PTXPLUS_BASE)/bin/python/lib_system/process_scripture_text.py'

# Python system processing script
PY_RUN_SYSTEM_PROCESS		= '$(PTXPLUS_BASE)/bin/python/lib_system/run_system_process.py'

# The ptxplus system provides some support for hyphenation
# The settings for this are found in this section.
[[Hyphenation]]

# Source Master Word List - This is an automatically
# generated word list of (hopefully) all the project
# source files. In this instance it is used for generating
# a hyphenation list for the project. This file should be
# in CSV format.
#  Default: Reports/wordlist-master.csv
sourceMasterWordsFile		= 'Reports/wordlist-master.csv'

# Non-hyphenated Words list - This is a list of words
# that were not hyphenated by the process. This is
# for auditing the process.
#  Default: Reports/non-hyphenated-words.txt
reportNonHypenatedWords		= 'Reports/non-hyphenated-words.txt'

# Source User Word List - This is a simple list of
# words which contain hyphens which denote where the
# word can be broken at the end of a line. The file
# should be plain UTF-8 text.
#  Example: ../Source/Project/hyphen-words.txt
#  Default = '' (nothing)
sourceUserWordsFile			= ''

# Source Names Word List - This is a simple list of
# proper names that the users provides which mark
# where a name can or cannot be broken at the end
# of a line. The file should be in plain UTF-8 text.
#  Example: Source/hyphen-names.txt
#  Default = '' (nothing)
sourceUserNamesFile			= ''

# Source prefix list - Some projects can benifit from
# hyphenating words that have prefixes. ptxplus will support
# this by auto-hyphenating words that use certain specified
# word prefixes. All you have to do is tell it where to find
# the file and it will do the rest.
#  Example: ../Source/Project/hyphen-prefixes.txt
#  Default = '' (nothing)
sourcePrefixListFile		= ''

# Source suffix list - Some projects can benifit from
# hyphenating words that have suffixes. ptxplus will support
# this by auto-hyphenating words that use certain specified
# word suffixes. All you have to do is tell it where to find
# the file and it will do the rest.
#  Example: ../Source/Project/hyphen-suffixes.txt
#  Default = '' (nothing)
sourceSuffixListFile		= ''

# New Hyphenation Word List - The final results of the
# hyphenation generation process is a hyphenated word
# list.
#  Default = Hyphenation/hyphenation.txt
newHyphenationFile			= 'Hyphenation/hyphenation.txt'

# Source encoding transform - In the case of multi-script
# projects or non-Unicode, an encoding transformation may
# be needed make the source data useful to the system. The
# encoding information is stored in the Encoding section
# and should be the same as other files used in this project.
#  Choices: (true | false) - Default = false
sourceEncodeTransform		= 'true'

# Final hyphen break rules - With some languages there may
# be consistent and easy places to break a word and these
# breaks can be applied automatically when the hyphen exceptions
# word list is being generated. This is done by including
# a simple (or not so simple) regular expression (regex)
# in this field. Example: (?u).(\u1064|\u1038)(?=\w.)
# This regex notation will be used in the hyphen word list
# generator to increase the number of breaks that can occur
# on words that qualify.
hyphenBreakRules			= ''


# These are settings which are used to drive the TeX processes
# that are a part of this system
[TeX]

# These are settings that will go into the TeX hyphenation file.
[[Hyphenation]]

# Define the language here, change 'customlanguage' to
# whatever you need it to be. Do not put a hyphen character
# in the name. The name should look something like this:
#	ENGlanguage
defineLanguage				= '\newlanguage\LNGlanguage'

# The language setting syntax
setLanguage					= '\language = \LNGlanguage'

# Set the default hyphen character to insert at hyphenation
# breaks. The normal is '‐' (U+2010) but it could be changed
# to use something like U+200B (ZWSP) Just change the character
# setting in the value. (Note that normally in the hyphenation
# word list source text you will find U+002D, a minus sign which
# also doubles for a hyphen character but it is not a proper one.)
setHyphenCharacter			= '\defaulthyphenchar="2010'

# Hyphenation Penalty - The bigger the number the harder it is
# to break a word in the hyphen list. The default is:
#  \hyphenpenalty=50
setHyphenPenalty			= '\hyphenpenalty=50'

# Explicit Hyphenation Penalty - Like with \hyphenpenalty this
# will adjust TEX's ability to break explicit hyphens. These
# are words that occure in the text which are spelled with a
# hyphen in them. Normally, TeX will not touch these unless
# this is set to a low number like -50. The default is:
#  \exhyphenpenalty=50
setExHyphenPenalty			= '\exhyphenpenalty=50'

# When using some Unicode fonts it is sometimes necessary
# to set the \lccode for those characters which would be
# normally set to '0'. See Help->TeX->\lccode for more
# information on how to set this variable.
lcCode						= ''

# Syntax for the actual hyphenation exclude word list
# This gets filled in with a list of words that do not
# conform to the hyphenation patterns that were defined
# for this language.
hyphenWords					= '\hyphenation{}'


# Settings for the adjust paragraph script which makes the
# .adj file that TeX will use
[[AdjustParagraph]]

# Set the number of words that the make_para_adjust_file.py will use
adjustParaLength			= 29

# Project settings concerning character encoding. It generally follows
# Latin/English script conventions. Modify and add as needed for your
# project.
[Encoding]

# This section contains information on processes that can be run on
# project data.
[[Processing]]

# If there is an encoding converstion that needs to be done on a regular
# basis the command for that process can be entered here so it can be
# accessed by several other processes.
customEncodingProcess		= ''

# Some encoding processes are done internally in a python script. To do
# this an encoding map is necessary. If multiple encoding conversions
# are needed then more than one TECKit mapping file should be provided.
# If more than one is needed please seperate them with a coma. Be sure
# also to include the path to the mapping file as well. If there are
# command switches include those after the file name. One limitation
# is that you cannot have spaces in your mapping file names. If it finds
# a space before a comma it will assume that it is a command switch. If
# if your original files has a space it in you must rename them.
# Here is an encoding chain example:
#  Encoding/KayahLiPUA.tec, Encoding/kayahli.tec -r, Encoding/kye_burm5.tec -nobom
encodingChain				= ''


# Space characters we might use in a project
[[SpaceCharacters]]

# Normal space character - Default = [ ] (U+0020)
space			= ' '

# Nonbreaking normal space (NBSP) - Default = [ ] (U+00A0)
nobreakSpace		= ' '

# Zero width space (ZWSP) - Default = [​] (U+200B)
zeroWidthSpace		= '​'

# Hair space - Default = [ ] (U+200A)
hairSpace		= ' '

# Thin space - Default = [ ] (U+2009)
thinSpace		= ' '

# Narrow no-break space (NNBSP) - Default = [ ] (U+202F)
nobreakThinSpace	= ' '

# En width space - Default = [ ] (U+2002)
enSpace			= ' '

# Em width space - Default = [ ] (U+2003)
emSpace			= ' '

# This section contains characters which are considered
# punctuation, the default is for latin writing systems.
[[Punctuation]]

# Two kinds of quotes will be expressed, dumb and smart.
# They will use the same key names but will be in seperate
# sections below. The scripts which call them will need to
# know which kind of quotes it is working with. Please use
# the raw character and not the Unicode value.
[[[Quotation]]]

# These are "dumb" quote characters we will be looking for
# if that is what is called for by setting dumbQuotes = "true"
[[[[DumbQuotes]]]]

# The quote marker character which always starts a run of
# quoted text - Default = ["] (U+0022)
outerQuote		= '"'

# Pairs of quote marker characters used in this project.
# Please remember to list them in pairs and seperate
# each character with a comma, not a space. Also, if you
# need to swap quote markers make sure this list matches
# the order of its mate in the SmartQuotes section.
quoteMarkerPairs	= '''",",',''''

# Level 1 open quote marker - Default = ["] (U+0022)
qMarker1_open		= '"'

# Level 1 continued quote marker - Default = ["] (U+0022)
qMarker1_continued	= '"'

# Level 2 open quote marker - Default = ['] (U+0027)
qMarker2_open		= "'"

# Level 2 continued quote marker - Default = ['] (U+0027)
qMarker2_continued	= "'"

# Level 3 open quote marker - Default = ["] (U+0022)
qMarker3_open		= '"'

# Level 1 close quote marker - Default = ["] (U+0022)
qMarker1_close		= '"'

# Level 2 close quote marker - Default = ['] (U+0027)
qMarker2_close		= "'"

# Level 3 close quote marker - Default = ["] (U+0022)
qMarker3_close		= '"'

# Contraction marker, if used - Default = ['] (U+0027)
contractionMarker	= "'"

# Possessive marker, if used - Default = ['] (U+0027)
possessiveMarker	= "'"


# These are the alternate “smart” quote characters they are
# recognized by setting dumbQuotes = "false"
[[[[SmartQuotes]]]]

# The quote marker character which always starts a run of
# quoted text - Default = [“] (U+201C)
outerQuote		= '“'

# Pairs of quote marker characters used in this project.
# Please remember to list them in pairs and seperate
# each character with a comma, not a space. Also, if you
# need to swap quote markers make sure this list matches
# the order of its mate in the DumbQuotes section.
quoteMarkerPairs	= '''“,”,‘,’'''

# Level 1 open quote marker - Default = [“] (U+201C)
qMarker1_open		= '“'

# Level 1 continued quote marker - Default = [“] (U+201C)
qMarker1_continued	= '“'

# Level 2 open quote marker - Default = [‘] (U+2018)
qMarker2_open		= '‘'

# Level 2 continued quote marker - Default = [‘] (U+2018)
qMarker2_continued	= '‘'

# Level 3 open quote marker - Default = [“] (U+201C)
qMarker3_open		= '“'

# Level 1 close quote marker - Default = [“] (U+201D)
qMarker1_close		= '”'

# Level 2 close quote marker - Default = [’] (U+2019)
qMarker2_close		= '’'

# Level 3 close quote marker - Default = [“] (U+201D)
qMarker3_close		= '”'

# Contraction marker, if used - Default = [’] (U+2019)
contractionMarker	= "’"

# Possessive marker, if used - Default = [’] (U+2019)
possessiveMarker	= "’"


# These are other text enclosing characters we may need to work with (brackets)
[[[Brackets]]]

# Pairs of bracket marker characters used in this project
# (Please remember to list them in pairs and seperate
# each character with a comma, not a space)
bracketMarkerPairs = '''(,),[,]'''

# Open parentheses - Default = [(] (U+0028)
pMarker_open		= '('

# Close parentheses - Default = [)] (U+0029)
pMarker_close		= ')'

# Open bracket - Default = [[] (U+005B)
bMarker_open		= '['

# Close bracket - Default = []] (U+005D)
bMarker_close		= ']'

# Open chevron (less than or wedge) - Default = [<] (U+003c)
wMarker_open		= '<'

# Close chevron (greater than or wedge) - Default = [>] (U+003E)
wMarker_close		= '>'

# Curly brace open - Default = [{] (U+007B)
cMarker_open		= '{'

# Curly brace close - Default = [}] (U+007D)
cMarker_close		= '}'


# Word-final punctuation - Change these characters as
# needed by your writing system.
[[[WordFinal]]]

# Period - Default = [.] (U+002E)
period			= '.'

# Comma - Default = [,] (U+002C)
comma			= ","

# Question - Default = [?] (U+003F)
question		= '?'

# Exclamation - Default = [!] (U+0021)
exclamation		= '!'

# Colon - Default = [:] (U+003A)
colon			= ':'

# Semicolon - Default = [;] (U+003B)
semicolon		= ';'

# Other character - This can contain a single character
# that is used as word-final punctuation. If left blank
# this setting will be ignored
other			= ''


# Other characters that could be used in the source
# text.
[[[Other]]]

# Tilde - Default = [~] (U+007E)
tilde			= '~'

# Comercial At sign - Default = [@] (U+0040)
at			= '@'

# Pound sign - Default = [#] (U+0023)
pound			= '#'

# Dollar sign - Default = [$] (U+0024)
dollar			= '$'

# Percent sign - Default = [%] (U+0025)
percent			= '%'

# Circumflex - Default = [^] (U+005E)
circumflex		= '^'

# Ampersand - Default = [&] (U+0026)
ampersand		= '&'

# Asterisk - Default = [*] (U+002A)
asterisk		= '*'

# Underscore - Default = [_] (U+005F)
underscore		= '_'

# Plus sign - Default = [+] (U+002B)
plus			= '+'

# Minus sign - Default = [-] (U+002D)
minus			= '-'

# Hyphen - Default = [-] (U+2010)
hyphen			= '‐'

# Non-breaking hyphen - Default = [‑] (U+2011)
nonbreakHyphen		= '‑'

# Equal sign - Default = [=] (U+003D)
equal			= '='

# Grave accent - Default = [`] (U+0060)
grave			= '`'

# Apostrophe - Default = ['] (U+0027)
apostrophe		= "'"

# Quotation (regular) - Default = ["] (U+0022)
quotation		= '"'

# Vertical Line (or pipe) - Default = [|] (U+007C)
vline			= '|'

# Solidus (back slash) - Default = [/] (U+002F)
solidus			= '/'

# Right solidus (forward slash) - Default = [\] (U+005C)
rsolidus		= '\'

# en dash - Default = [–] (U+2013)
endash			= '–'

# em dash - Default = [—] (U+2014)
emdash			= '—'


# In case there are special characters to deal with we will
# define them in this sub-section
[[[SpecialContexts]]]

# Footnote Reference Seperator - Default = [–] (U+2013) en dash
footnoteRefSeperator	= '–'

# Footnote Caller, which may be one of the following three types:
#  + / indicates that the caller should be generated automatically
#  by the translation editor, or publishing tools.
#  - / indicates that no caller should be generated, and is not used.
#  ? / where ? represents the character to be used for the caller.
#  The caller is defined for the specific note by the author.
#  Default = [+] (U+002B) Can be [+, - or ?]
footnoteCaller		= '+'

# Special settings for the use of numbers
[[Numbers]]

# This is for dealing with special numbering systems that may
# be used within crossreferences and footnotes text.
# Use a Unicode expression something like this: EE20
# This is the Unicode code point where zero can be found. This
# is useful for defining a basic number range. If left blank,
# any processes that need it will ignore it.
#  Default = <blank>
whereIsZero			= ''


# Settings dealing with source text markup. The USFM standard is
# the default but these can be altered if needed.
[Markup]

# These are all the USFM markers in version 2.1. They are grouped by their type.
# Where a level number occures we go up to "3". More may occure so this may need
# to be looked into further at some point. (Note: To avoid having only one item
# in a field I moved "periph" to be under Identification. Probably goes better
# there anyway.)
[[USFMAllMarkers]]

# Identification meta-data markers
identification		= id, ide, sts, rem, h, h1, h2, h3, toc1, toc2, toc3, periph

# Introduction markup
introductions		= im, imt, imt1, imt2, imt3, is, is1, is2, is3, ip, ipi, im, imi, ipq, imq, ipr, iq1, iq2, iq3, ib, ili, ili1, ili2, ili3, iot, io, io1, io2, ior, ior*, iex, imte, ie

# Markup used in titles, headings and labels
titlesHeadingsLabels	= mt, mt1, mt2, mt3, mt4, mte, mte1, mte2, mte3, ms, ms1, ms2, ms3, mr, s, s1, s2, s3, sr, r, rq, rq*, d, sp

# Chapter and verse markup
chaptersVerses		= c, ca, ca*, cl, cp, cd, v, va, va*, vp, vp*

# Paragraph markers
paragraphs		= p, m, pmo, pm, pmc, pmr, pi, pi1, pi2, pi3, mi, nb, cls, li, li1, li2, li3, pc, pr, ph, ph1, ph2, ph3, b

# Poetry markers
poetry			= q, q1, q2, q3, qr, qc, qs, qs*, qa, qac, qac*, qm, qm1, qm2, qm3, b

# Markup used in tables
tables			= tr, th1, th2, th3, thr1, thr2, thr3, tc1, tc2, tc3, tcr1, tcr2, tcr3

# Footnote markers
footnotes		= f, f*, fe, fe*, fr, fk, fq, fqa, fl, fp, fv, ft, fdc, fdc*, fm, fm*

# Cross reference markers
crossRefereces		= x, x*, xo, xk, xq, xt, xdc, xdc*

# Special text markers
specialText		= add, add*, bk, bk*, dc, dc*, k, k*, lit, nd, nd*, ord, ord*, pn, pn*, qt, qt*, sig, sig*, sls, sls*, tl, tl*, wj, wj*

# Character styling markup
characterStyling	= em, em*, bd, bd*, it, it*, bdit, bdit*, no, no*, sc, sc*

# Special space break markers (not really used too often)
spacingBreaks		= !$, //, pb

# Special features - Elements in this section mark portions of text within a
# larger paragraph unit
specialFeatures		= fig, fig*, ndx, ndx*, pro, pro*, w, w*, wq, wq*, wh, wh*

# Non-standard markers which are used in certain peripheral parts of the publication
peripheralExtras	= ct, ct1, ct2, ct3, spacer


# Inventory of markers used in this project. (hopefully this will be auto-generated)
[[MarkersInProject]]

# This is an inventory of SFM markers found in this project. The list "seeded"
# with some commonly found ones and it is expanded by the SFM inventory process.
# This inventory helps auto-generate .sty files.
projectMarkers		= id, c, v, p

# Identification Markers, individual marker system name with definition
# (this sub-group is not complete yet)
[[Identification]]

# Book ID marker
fileIdentification	= 'id'

# Book header marker
runningHeader		= 'h'

# Introductions Markers, individual marker system name with definition
# (this sub-group is not complete yet)
[[Introductions]]

# Introduction major title - level 1
introMajorTitleOne	= 'imt1'

# Introduction major title - level 2
introMajorTitleTwo	= 'imt2'

# Introduction major title - level 3
introMajorTitleThree	= 'imt3'

# Title, Heading and Label Markers, individual marker system name with definition
# (this sub-group is not complete yet)
[[TitlesHeadingsLabels]]

# Section heading - level 1
sectionHeading		= 's1'

# Chapter and Verse Markers, individual marker system name with definition
# (this sub-group is not complete yet)
[[ChaptersVerses]]

# Standard basic verse marker
verseNumber		= 'v'

# Standard basic chapter marker
chapterNumber		= 'c'

# The chapter "label" to be used when the chosen publishing presentation will
# render chapter divisions as headings, and not drop cap numerals.
chapterLabel		= 'cl'

# Paragraph Markers, individual marker system name with definition
# (this sub-group is not complete yet)
[[Paragraphs]]

# Normal paragraph
paragraphNormal		= 'p'

# Embedded text paragraph
paragraphEmbedded	= 'pm'

# Flush left (margin) paragraph
paragraphLeft		= 'm'

# Poetry Markers, individual marker system name with definition
# (this sub-group is not complete yet)
[[Poetry]]

# Poetic line - level 1
poeticLineOne		= 'q1'

# Poetic line - level 2
poeticLineTwo		= 'q2'

# Poetic line - level 3
poeticLineThree		= 'q3'

# Poetry Markers, individual marker system name with definition
# (this sub-group is not complete yet)
[[Tables]]

# Table row start.
tableRowStart		= 'tr'

# Poetry Markers, individual marker system name with definition
# (this sub-group is not complete yet)
[[Footnotes]]

# Footnote open marker
footnoteOpenMarker	= 'f'

# Footnote close marker
footnoteCloseMarker	= 'f*'

# Footnote reference open marker
footnoteRefOpenMarker	= 'fr'

# Footnote reference close marker
footnoteRefCloseMarker	= 'fr*'

# Poetry Markers, individual marker system name with definition (this sub-group is not complete yet)
[[CrossRefereces]]

# CrossRef open marker
crossRefOpenMarker	= 'x'

# CrossRef close marker
crossRefCloseMarker	= 'x*'

# CrossRef target marker
crossRefTargetMarker	= 'xt'

# Poetry Markers, individual marker system name with definition
# (this sub-group is not complete yet)
[[SpecialText]]

# Quoted text - open
quotedTextOpen		= 'qt'

# Quoted text - close
quotedTextClose		= 'qt*'

# Poetry Markers, individual marker system name with definition
# (this sub-group is not complete yet)
[[CharacterStyling]]

# Italic text - open
italicTextOpen		= 'it'

# Italic text - close
italicTextClose		= 'it*'

# Poetry Markers, individual marker system name with definition
# (this sub-group is not complete yet)
[[SpacingBreaks]]

# Page break (explicit)
pageBreak		= 'pb'

# Poetry Markers, individual marker system name with definition
# (this sub-group is not complete yet)
[[SpecialFeatures]]

# Wordlist/glossary/dictionary entry - open
wordlistEntryOpen	= 'w'

# Wordlist/glossary/dictionary entry - close
wordlistEntryClose	= 'w*'

# Poetry Markers, individual marker system name with definition
# (this sub-group is not complete yet)
[[Peripherals]]

# Identify non-Scriptural content
peripheral		= 'periph'

# This sub-group contains markers which could possibly need content
# automatically inserted in them. If that is the case, a module would
# need to be present in the system. Here is where the information for
# a particular marker would reside.
[[FieldContent]]

# The chapter "label" to be used when the chosen publishing presentation will render chapter
# divisions as headings, and not drop cap numerals. This setting will only be used if the
# General->TextProcesses->insert_chapter_label is set to true.
#
# Usage note:
# If \cl is entered once before chapter 1 (\c 1) it represents the text for "chapter"
# to be used throughout the current book. If \cl is used after each individual chapter
# marker, it represents the particular text to be used for the display of the current
# chapter heading (usually done if numbers are being presented as words, not numerals).
#  Default = Chapter
cl			= 'Chapter'
